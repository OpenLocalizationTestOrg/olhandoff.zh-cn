<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="zh-cn" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">e95ba46a6944d097bac52cb8257a64c4e422238b</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source xml:space="preserve">ms.ContentId: 526e4f1a-2936-4c61-b3be-d41b4cf9d10f</source>
          <target xml:space="preserve">ms.ContentId: 526e4f1a-2936-4c61-b3be-d41b4cf9d10f</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source xml:space="preserve">title: About Windows Server Containers</source>
          <target xml:space="preserve">title: About Windows Server Containers</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source xml:space="preserve">Windows Server Containers</source>
          <target xml:space="preserve">Windows Server Containers</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source xml:space="preserve">Applications fuel innovation in the cloud and mobile era.</source>
          <target xml:space="preserve">Applications fuel innovation in the cloud and mobile era.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source xml:space="preserve">Containers, and the ecosystem that is developing around them, will empower software developers to create the next generation of applications experiences.</source>
          <target xml:space="preserve">Containers, and the ecosystem that is developing around them, will empower software developers to create the next generation of applications experiences.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://youtu.be/Ryx3o0rD5lY )</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">Watch a short overview: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows-based containers: Modern app development with enterprise-grade control</pc>.</source>
          <target xml:space="preserve">Watch a short overview: <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Windows-based containers: Modern app development with enterprise-grade control</pc>.</target>
        </segment>
      </unit>
      <unit id="107">
        <segment state="initial">
          <source xml:space="preserve">What are containers?</source>
          <target xml:space="preserve">What are containers?</target>
        </segment>
      </unit>
      <unit id="108">
        <segment state="initial">
          <source xml:space="preserve">They are an isolated, resource controlled, and portable operating environment.</source>
          <target xml:space="preserve">They are an isolated, resource controlled, and portable operating environment.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source xml:space="preserve">Basically, a container is an isolated place where an application can run without affecting the rest of the system and without the system affecting the application.</source>
          <target xml:space="preserve">Basically, a container is an isolated place where an application can run without affecting the rest of the system and without the system affecting the application.</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source xml:space="preserve">Containers are the next evolution in virtualization.</source>
          <target xml:space="preserve">Containers are the next evolution in virtualization.</target>
        </segment>
      </unit>
      <unit id="111">
        <segment state="initial">
          <source xml:space="preserve">If you were inside a container, it would look very much like you were inside a freshly installed physical computer or a virtual machine.</source>
          <target xml:space="preserve">If you were inside a container, it would look very much like you were inside a freshly installed physical computer or a virtual machine.</target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://www.docker.com/)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">And, to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Docker</pc>, a Windows Server Container can be managed in the same way as any other container.</source>
          <target xml:space="preserve">And, to <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Docker</pc>, a Windows Server Container can be managed in the same way as any other container.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source xml:space="preserve">Container Fundamentals</source>
          <target xml:space="preserve">Container Fundamentals</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source xml:space="preserve">When you begin working with containers you will notice many similarities between a container and a virtual machine.</source>
          <target xml:space="preserve">When you begin working with containers you will notice many similarities between a container and a virtual machine.</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source xml:space="preserve">A container runs an operating system, has a file system and can be accessed over a network just as if it was a physical or virtual computer system.</source>
          <target xml:space="preserve">A container runs an operating system, has a file system and can be accessed over a network just as if it was a physical or virtual computer system.</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source xml:space="preserve">That said, the technology and concepts behind containers are very different from that of virtual machines.</source>
          <target xml:space="preserve">That said, the technology and concepts behind containers are very different from that of virtual machines.</target>
        </segment>
      </unit>
      <unit id="117">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://azure.microsoft.com/blog/2015/08/17/containers-docker-windows-and-trends/)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">This blog post</pc> by Mark Russinovich explains containers well.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">This blog post</pc> by Mark Russinovich explains containers well.</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source xml:space="preserve">The following key concepts will be helpful as you begin creating and working with Windows Server Containers.</source>
          <target xml:space="preserve">The following key concepts will be helpful as you begin creating and working with Windows Server Containers.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Host:</pc> Physical or Virtual computer system configured with the Windows Server Container feature.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Host:</pc> Physical or Virtual computer system configured with the Windows Server Container feature.</target>
        </segment>
      </unit>
      <unit id="120">
        <segment state="initial">
          <source xml:space="preserve">The container host will run one or more Windows Server Containers.</source>
          <target xml:space="preserve">The container host will run one or more Windows Server Containers.</target>
        </segment>
      </unit>
      <unit id="121">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Image:</pc> As modifications are made to a containers file system or registry, such as with software installation they are captured in the sandbox.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Image:</pc> As modifications are made to a containers file system or registry, such as with software installation they are captured in the sandbox.</target>
        </segment>
      </unit>
      <unit id="122">
        <segment state="initial">
          <source xml:space="preserve">In many cases you may want to capture this state such that new containers can be created that inherit these changes.</source>
          <target xml:space="preserve">In many cases you may want to capture this state such that new containers can be created that inherit these changes.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source xml:space="preserve">That’s what an image is – once the container has stopped you can either discard that sandbox or you can convert it into a new container image.</source>
          <target xml:space="preserve">That’s what an image is – once the container has stopped you can either discard that sandbox or you can convert it into a new container image.</target>
        </segment>
      </unit>
      <unit id="124">
        <segment state="initial">
          <source xml:space="preserve">For example, let’s imagine that you have deployed a container from the Windows Server Core OS image.</source>
          <target xml:space="preserve">For example, let’s imagine that you have deployed a container from the Windows Server Core OS image.</target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source xml:space="preserve">You then install MySQL into this container.</source>
          <target xml:space="preserve">You then install MySQL into this container.</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source xml:space="preserve">Creating a new image from this container would act as a deployable version of the container.</source>
          <target xml:space="preserve">Creating a new image from this container would act as a deployable version of the container.</target>
        </segment>
      </unit>
      <unit id="127">
        <segment state="initial">
          <source xml:space="preserve">This image would only contain the changes made (MySQL), however would work as a layer on top of the Container OS Image.</source>
          <target xml:space="preserve">This image would only contain the changes made (MySQL), however would work as a layer on top of the Container OS Image.</target>
        </segment>
      </unit>
      <unit id="128">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sandbox:</pc> Once a container has been started, all write actions such as file system modifications, registry modifications or software installations are captured in this ‘sandbox’ layer.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Sandbox:</pc> Once a container has been started, all write actions such as file system modifications, registry modifications or software installations are captured in this ‘sandbox’ layer.</target>
        </segment>
      </unit>
      <unit id="129">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container OS Image:</pc> Containers are deployed from images.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container OS Image:</pc> Containers are deployed from images.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source xml:space="preserve">The container OS image is the first layer in potentially many image layers that make up a container.</source>
          <target xml:space="preserve">The container OS image is the first layer in potentially many image layers that make up a container.</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source xml:space="preserve">This image provides the operating system environment.</source>
          <target xml:space="preserve">This image provides the operating system environment.</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source xml:space="preserve">A Container OS Image is Immutable, it cannot be modified.</source>
          <target xml:space="preserve">A Container OS Image is Immutable, it cannot be modified.</target>
        </segment>
      </unit>
      <unit id="133">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Repository:</pc> Each time a container image is created the container image and its dependencies are stored in a local repository.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Repository:</pc> Each time a container image is created the container image and its dependencies are stored in a local repository.</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source xml:space="preserve">These images can be reused many times on the container host.</source>
          <target xml:space="preserve">These images can be reused many times on the container host.</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source xml:space="preserve">The container images can also be stored in a public or private repository such as DockerHub so that they can be used across many different container host.</source>
          <target xml:space="preserve">The container images can also be stored in a public or private repository such as DockerHub so that they can be used across many different container host.</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Management Technology:</pc> Windows Server Containers can be managed using both PowerShell and Docker.</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Container Management Technology:</pc> Windows Server Containers can be managed using both PowerShell and Docker.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source xml:space="preserve">With either one of these tools you can create new containers, container images as well as manage the container lifecycle.</source>
          <target xml:space="preserve">With either one of these tools you can create new containers, container images as well as manage the container lifecycle.</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source xml:space="preserve">Containers for Developers</source>
          <target xml:space="preserve">Containers for Developers</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source xml:space="preserve">From a developer’s desktop to a testing machine to a set of production machines, a Docker image can be created that will deploy identically across any environment in seconds.</source>
          <target xml:space="preserve">From a developer’s desktop to a testing machine to a set of production machines, a Docker image can be created that will deploy identically across any environment in seconds.</target>
        </segment>
      </unit>
      <unit id="140">
        <segment state="initial">
          <source xml:space="preserve">This story has created a massive and growing ecosystem of applications packaged in Docker containers, with DockerHub, the public containerized-application registry that Docker maintains, currently publishing more than 180,000 applications in the public community repository.</source>
          <target xml:space="preserve">This story has created a massive and growing ecosystem of applications packaged in Docker containers, with DockerHub, the public containerized-application registry that Docker maintains, currently publishing more than 180,000 applications in the public community repository.</target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source xml:space="preserve">When you containerize an app, only the app and the components needed to run the app are combined into an "image".</source>
          <target xml:space="preserve">When you containerize an app, only the app and the components needed to run the app are combined into an "image".</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source xml:space="preserve">Containers are then created from this image as you need them.</source>
          <target xml:space="preserve">Containers are then created from this image as you need them.</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source xml:space="preserve">You can also use an image as a baseline to create another image, making image creation even faster.</source>
          <target xml:space="preserve">You can also use an image as a baseline to create another image, making image creation even faster.</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source xml:space="preserve">Multiple containers can share the same image, which means containers start very quickly and use fewer resources.</source>
          <target xml:space="preserve">Multiple containers can share the same image, which means containers start very quickly and use fewer resources.</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source xml:space="preserve">For example, you can use containers to spin up light-weight and portable app components – or ‘micro-services’ – for distributed apps and quickly scale each service separately.</source>
          <target xml:space="preserve">For example, you can use containers to spin up light-weight and portable app components – or ‘micro-services’ – for distributed apps and quickly scale each service separately.</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source xml:space="preserve">Because the container has everything it needs to run your application, they are very portable and can run on any machine that is running Windows Server 2016.</source>
          <target xml:space="preserve">Because the container has everything it needs to run your application, they are very portable and can run on any machine that is running Windows Server 2016.</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source xml:space="preserve">You can create and test containers locally, then deploy that same container image to your company's private cloud, public cloud or service provider.</source>
          <target xml:space="preserve">You can create and test containers locally, then deploy that same container image to your company's private cloud, public cloud or service provider.</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source xml:space="preserve">The natural agility of Containers supports modern app development patterns in large scale, virtualized and cloud environments.</source>
          <target xml:space="preserve">The natural agility of Containers supports modern app development patterns in large scale, virtualized and cloud environments.</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source xml:space="preserve">With containers, developers can build an app in any language.</source>
          <target xml:space="preserve">With containers, developers can build an app in any language.</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source xml:space="preserve">These apps are completely portable and can run anywhere - laptop, desktop, server, private cloud, public cloud or service provider - without any code changes.</source>
          <target xml:space="preserve">These apps are completely portable and can run anywhere - laptop, desktop, server, private cloud, public cloud or service provider - without any code changes.</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source xml:space="preserve">Containers helps developers build and ship higher-quality applications, faster.</source>
          <target xml:space="preserve">Containers helps developers build and ship higher-quality applications, faster.</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source xml:space="preserve">Containers for IT Professionals</source>
          <target xml:space="preserve">Containers for IT Professionals</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source xml:space="preserve">IT Professionals can use containers to provide standardized environments for their development, QA, and production teams.</source>
          <target xml:space="preserve">IT Professionals can use containers to provide standardized environments for their development, QA, and production teams.</target>
        </segment>
      </unit>
      <unit id="154">
        <segment state="initial">
          <source xml:space="preserve">They no longer have to worry about complex installation and configuration steps.</source>
          <target xml:space="preserve">They no longer have to worry about complex installation and configuration steps.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source xml:space="preserve">By using containers, systems administrators abstract away differences in OS installations and underlying infrastructure.</source>
          <target xml:space="preserve">By using containers, systems administrators abstract away differences in OS installations and underlying infrastructure.</target>
        </segment>
      </unit>
      <unit id="156">
        <segment state="initial">
          <source xml:space="preserve">Containers help admins create an infrastructure that is simpler to update and maintain.</source>
          <target xml:space="preserve">Containers help admins create an infrastructure that is simpler to update and maintain.</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source xml:space="preserve">Video Overview</source>
          <target xml:space="preserve">Video Overview</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source xml:space="preserve">Try Windows Server Containers</source>
          <target xml:space="preserve">Try Windows Server Containers</target>
        </segment>
      </unit>
      <unit id="159">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../quick_start/azure_setup.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get started with Windows Server Containers in Windows Azure</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get started with Windows Server Containers in Windows Azure</pc>
					</target>
        </segment>
      </unit>
      <unit id="160">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](../quick_start/container_setup.md)</data>
        </originalData>
        <segment state="initial">
          <source xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get started with Windows Server Containers Locally</pc>
					</source>
          <target xml:space="preserve">
						<pc dataRefEnd="id2" dataRefStart="id1" id="p1">Get started with Windows Server Containers Locally</pc>
					</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source xml:space="preserve">Back to Container Home</source>
          <target xml:space="preserve">Back to Container Home</target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>